{"version":3,"sources":["../../../source/lib/style/style.js"],"names":["utils","require","_","Alignment","Border","Fill","Font","NumberFormat","_getFontId","wb","font","merge","opts","defaultFont","thisFont","fontId","styleData","fonts","forEach","f","i","isEqual","toObject","undefined","count","push","_getFillId","fill","thisFill","fillId","fills","_getBorderId","border","thisBorder","borderId","borders","b","_getNumFmt","val","fmt","numFmts","formatCode","fmtId","length","numFmtId","Style","alignment","numberFormat","numFmt","pivotButton","quotePrefix","ids","obj","ele","thisEle","thisXF","xf","Object","keys","a","addToXMLele","att","applyFont","applyFill","applyBorder","applyNumberFormat","applyAlignment","module","exports"],"mappings":"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","file":"style.js","sourcesContent":["const utils = require('../utils.js');\nconst _ = require('lodash');\n\nconst Alignment = require('./classes/alignment.js');\nconst Border = require('./classes/border.js');\nconst Fill = require('./classes/fill.js');\nconst Font = require('./classes/font.js');\nconst NumberFormat = require('./classes/numberFormat.js');\n\nlet _getFontId = (wb, font) => {\n\n    font = _.merge({}, wb.opts.defaultFont, font);\n    let thisFont = new Font(font);\n\n    let fontId;\n    wb.styleData.fonts.forEach((f, i) => {\n        if (_.isEqual(thisFont.toObject(), f.toObject())) {\n            fontId = i;\n        }\n    });\n    if (fontId === undefined) {\n        let count = wb.styleData.fonts.push(thisFont);\n        fontId = count - 1;\n    }\n\n    return fontId;\n};\n\nlet _getFillId = (wb, fill) => {\n    if (fill === undefined) {\n        return null;\n    }\n\n    let thisFill = new Fill(fill);\n\n    let fillId;\n    wb.styleData.fills.forEach((f, i) => {\n        if (_.isEqual(thisFill.toObject(), f.toObject())) {\n            fillId = i;\n        }\n    });\n    if (fillId === undefined) {\n        let count = wb.styleData.fills.push(thisFill);\n        fillId = count - 1;\n    }\n\n    return fillId;\n};\n\nlet _getBorderId = (wb, border) => {\n    if (border === undefined) {\n        return null;\n    }\n\n    let thisBorder = new Border(border);\n    let borderId;\n    wb.styleData.borders.forEach((b, i) => {\n        if (_.isEqual(b.toObject(), thisBorder.toObject())) {\n            borderId = i;\n        }\n    });\n\n    if (borderId === undefined) {\n        let count = wb.styleData.borders.push(thisBorder);\n        borderId = count - 1;\n    }\n\n    return borderId;\n};\n\nlet _getNumFmt = (wb, val) => {\n    let fmt;\n    wb.styleData.numFmts.forEach((f) => {\n        if (_.isEqual(f.formatCode, val)) {\n            fmt = f;\n        }\n    });\n\n    if (fmt === undefined) {\n        let fmtId = wb.styleData.numFmts.length + 164;\n        fmt = new NumberFormat(val);\n        fmt.numFmtId = fmtId;\n        wb.styleData.numFmts.push(fmt);\n    }\n\n    return fmt;\n};\n\n\n/*\n    Style Opts\n    {\n        alignment: { // ยง18.8.1\n            horizontal: ['center', 'centerContinuous', 'distributed', 'fill', 'general', 'justify', 'left', 'right'],\n            indent: integer, // Number of spaces to indent = indent value * 3\n            justifyLastLine: boolean,\n            readingOrder: ['contextDependent', 'leftToRight', 'rightToLeft'], \n            relativeIndent: integer, // number of additional spaces to indent\n            shrinkToFit: boolean,\n            textRotation: integer, // number of degrees to rotate text counter-clockwise\n            vertical: ['bottom', 'center', 'distributed', 'justify', 'top'],\n            wrapText: boolean\n        },\n        font: { // ยง18.8.22\n            bold: boolean,\n            charset: integer,\n            color: string,\n            condense: boolean,\n            extend: boolean,\n            family: string,\n            italics: boolean,\n            name: string,\n            outline: boolean,\n            scheme: string, // ยง18.18.33 ST_FontScheme (Font scheme Styles)\n            shadow: boolean,\n            strike: boolean,\n            size: integer,\n            underline: boolean,\n            vertAlign: string // ยง22.9.2.17 ST_VerticalAlignRun (Vertical Positioning Location)\n        },\n        border: { // ยง18.8.4 border (Border)\n            left: {\n                style: string,\n                color: string\n            },\n            right: {\n                style: string,\n                color: string\n            },\n            top: {\n                style: string,\n                color: string\n            },\n            bottom: {\n                style: string,\n                color: string\n            },\n            diagonal: {\n                style: string,\n                color: string\n            },\n            diagonalDown: boolean,\n            diagonalUp: boolean,\n            outline: boolean\n        },\n        fill: { // ยง18.8.20 fill (Fill)\n            type: 'pattern',\n            patternType: 'solid',\n            color: 'Yellow'\n        },\n        numberFormat: integer or string // ยง18.8.30 numFmt (Number Format)\n    }\n*/\nclass Style {\n    constructor(wb, opts) {\n        /**\n         * Excel Style object\n         * @class Style\n         * @desc Style object for formatting Excel Cells\n         * @param {Workbook} wb Excel Workbook object\n         * @param {Object} opts Options for style\n         * @param {Object} opts.alignment Options for creating an Alignment instance\n         * @param {Object} opts.font Options for creating a Font instance\n         * @param {Object} opts.border Options for creating a Border instance\n         * @param {Object} opts.fill Options for creating a Fill instance\n         * @param {String} opts.numberFormat\n         * @property {Alignment} alignment Alignment instance associated with Style\n         * @property {Border} border Border instance associated with Style\n         * @property {Number} borderId ID of Border instance in the Workbook\n         * @property {Fill} fill Fill instance associated with Style\n         * @property {Number} fillId ID of Fill instance in the Workbook\n         * @property {Font} font Font instance associated with Style\n         * @property {Number} fontId ID of Font instance in the Workbook\n         * @property {String} numberFormat String represenation of the way a number should be formatted\n         * @property {Number} xf XF id of the Style in the Workbook\n         * @returns {Style} \n         */\n        opts = opts ? opts : {};\n\n        if (opts.alignment !== undefined) {\n            this.alignment = new Alignment(opts.alignment);\n        }\n\n        if (opts.border !== undefined) {  \n            this.borderId = _getBorderId(wb, opts.border); // attribute 0 based index\n            this.border = wb.styleData.borders[this.borderId];  \n        }\n        if (opts.fill !== undefined) {  \n            this.fillId = _getFillId(wb, opts.fill); // attribute 0 based index\n            this.fill = wb.styleData.fills[this.fillId];\n        }\n\n        if (opts.font !== undefined) {  \n            this.fontId = _getFontId(wb, opts.font); // attribute 0 based index\n            this.font = wb.styleData.fonts[this.fontId];\n        }\n\n        if (opts.numberFormat !== undefined) {  \n            if (typeof opts.numberFormat === 'number' && opts.numberFormat <= 164) {\n                this.numFmtId = opts.numberFormat;\n            } else if (typeof opts.numberFormat === 'string') {\n                this.numFmt = _getNumFmt(wb, opts.numberFormat);\n            }\n        }\n\n        if (opts.pivotButton !== undefined) {\n            this.pivotButton = null; // attribute boolean\n        }\n\n        if (opts.quotePrefix !== undefined) {\n            this.quotePrefix = null; // attribute boolean\n        }\n\n        this.ids = {};\n    }\n\n    get xf() {\n        let thisXF = {};\n\n        if (typeof this.fontId === 'number') {\n            thisXF.applyFont = 1;\n            thisXF.fontId = this.fontId;\n        }\n\n        if (typeof this.fillId === 'number') {\n            thisXF.applyFill = 1;\n            thisXF.fillId = this.fillId;\n        }\n\n        if (typeof this.borderId === 'number') {\n            thisXF.applyBorder = 1;\n            thisXF.borderId = this.borderId;\n        }\n\n        if (typeof this.numFmtId === 'number') {\n            thisXF.applyNumberFormat = 1;\n            thisXF.numFmtId = this.numFmtId;\n        } else if (this.numFmt !== undefined && this.numFmt !== null) {\n            thisXF.applyNumberFormat = 1;\n            thisXF.numFmtId = this.numFmt.numFmtId;\n        }\n\n        if (this.alignment instanceof Alignment) {\n            thisXF.applyAlignment = 1;\n            thisXF.alignment = this.alignment;\n        }\n\n        return thisXF;\n    }\n\n\n    /** \n     * @func Style.toObject\n     * @desc Converts the Style instance to a javascript object\n     * @returns {Object}\n     */\n    toObject() {\n        let obj = {};\n\n        if (typeof this.fontId === 'number') {\n            obj.font = this.font.toObject();\n        }\n\n        if (typeof this.fillId === 'number') {\n            obj.fill = this.fill.toObject();\n        }\n\n        if (typeof this.borderId === 'number') {\n            obj.border = this.border.toObject();\n        }\n\n        if (typeof this.numFmtId === 'number' && this.numFmtId < 164) {\n            obj.numberFormat = this.numFmtId;\n        } else if (this.numFmt !== undefined && this.numFmt !== null) {\n            obj.numberFormat = this.numFmt.formatCode;\n        }\n\n        if (this.alignment instanceof Alignment) {\n            obj.alignment = this.alignment.toObject();\n        }\n\n        if (this.pivotButton !== undefined) {\n            obj.pivotButton = this.pivotButton;\n        }\n\n        if (this.quotePrefix !== undefined) {\n            obj.quotePrefix = this.quotePrefix;\n        }\n\n        return obj;   \n    }\n\n    /**\n     * @alias Style.addToXMLele\n     * @desc When generating Workbook output, attaches style to the styles xml file\n     * @func Style.addToXMLele\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\n     */\n    addXFtoXMLele(ele) {\n        let thisEle = ele.ele('xf');\n        let thisXF = this.xf;\n        Object.keys(thisXF).forEach((a) => {\n            if (a === 'alignment') {\n                thisXF[a].addToXMLele(thisEle);\n            } else {\n                thisEle.att(a, thisXF[a]);\n            }\n        });        \n    }\n\n    /**\n     * @alias Style.addDXFtoXMLele\n     * @desc When generating Workbook output, attaches style to the styles xml file as a dxf for use with conditional formatting rules\n     * @func Style.addDXFtoXMLele\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\n     */\n    addDXFtoXMLele(ele) {\n        let thisEle = ele.ele('dxf');\n\n        if (this.font instanceof Font) {\n            this.font.addToXMLele(thisEle);\n        }\n\n        if (this.numFmt instanceof NumberFormat) {\n            this.numFmt.addToXMLele(thisEle);\n        }\n\n        if (this.fill instanceof Fill) {\n            this.fill.addToXMLele(thisEle);\n        }\n\n        if (this.alignment instanceof Alignment) {\n            this.alignment.addToXMLele(thisEle);\n        }\n\n        if (this.border instanceof Border) {\n            this.border.addToXMLele(thisEle);\n        }\n    }\n}\n\nmodule.exports = Style;"]}