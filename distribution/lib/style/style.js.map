{"version":3,"sources":["../../../source/lib/style/style.js"],"names":["utils","require","deepmerge","Alignment","Border","Fill","Font","NumberFormat","_getFontId","wb","font","opts","defaultFont","thisFont","lookupKey","JSON","stringify","toObject","id","styleDataLookup","fonts","undefined","styleData","push","_getFillId","fill","thisFill","fills","_getBorderId","border","thisBorder","borders","_getNumFmt","val","fmt","numFmts","forEach","f","formatCode","fmtId","length","numFmtId","Style","styles","alignment","borderId","fillId","fontId","numberFormat","numFmt","pivotButton","quotePrefix","ids","obj","ele","thisEle","thisXF","xf","Object","keys","a","addToXMLele","att","applyFont","applyFill","applyBorder","applyNumberFormat","applyAlignment","module","exports"],"mappings":"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","file":"style.js","sourcesContent":["const utils = require('../utils.js');\r\nconst deepmerge = require('deepmerge');\r\n\r\nconst Alignment = require('./classes/alignment.js');\r\nconst Border = require('./classes/border.js');\r\nconst Fill = require('./classes/fill.js');\r\nconst Font = require('./classes/font.js');\r\nconst NumberFormat = require('./classes/numberFormat.js');\r\n\r\nlet _getFontId = (wb, font = {}) => {\r\n\r\n    // Create the Font and lookup key\r\n    font = deepmerge(wb.opts.defaultFont, font);\r\n    const thisFont = new Font(font);\r\n    const lookupKey = JSON.stringify(thisFont.toObject());\r\n\r\n    // Find an existing entry, creating a new one if it does not exist\r\n    let id = wb.styleDataLookup.fonts[lookupKey];\r\n    if (id === undefined) {\r\n        id = wb.styleData.fonts.push(thisFont) - 1;\r\n        wb.styleDataLookup.fonts[lookupKey] = id;\r\n    }\r\n\r\n    return id;\r\n};\r\n\r\nlet _getFillId = (wb, fill) => {\r\n    if (fill === undefined) {\r\n        return null;\r\n    }\r\n\r\n    // Create the Fill and lookup key\r\n    const thisFill = new Fill(fill);\r\n    const lookupKey = JSON.stringify(thisFill.toObject());\r\n\r\n    // Find an existing entry, creating a new one if it does not exist\r\n    let id = wb.styleDataLookup.fills[lookupKey];\r\n    if (id === undefined) {\r\n        id = wb.styleData.fills.push(thisFill) - 1;\r\n        wb.styleDataLookup.fills[lookupKey] = id;\r\n    }\r\n\r\n    return id;\r\n};\r\n\r\nlet _getBorderId = (wb, border) => {\r\n    if (border === undefined) {\r\n        return null;\r\n    }\r\n\r\n    // Create the Border and lookup key\r\n    const thisBorder = new Border(border);\r\n    const lookupKey = JSON.stringify(thisBorder.toObject());\r\n\r\n    // Find an existing entry, creating a new one if it does not exist\r\n    let id = wb.styleDataLookup.borders[lookupKey];\r\n    if (id === undefined) {\r\n        id = wb.styleData.borders.push(thisBorder) - 1;\r\n        wb.styleDataLookup.borders[lookupKey] = id;\r\n    }\r\n\r\n    return id;\r\n};\r\n\r\nlet _getNumFmt = (wb, val) => {\r\n    let fmt;\r\n    wb.styleData.numFmts.forEach((f) => {\r\n        if (f.formatCode === val) {\r\n            fmt = f;\r\n        }\r\n    });\r\n\r\n    if (fmt === undefined) {\r\n        let fmtId = wb.styleData.numFmts.length + 164;\r\n        fmt = new NumberFormat(val);\r\n        fmt.numFmtId = fmtId;\r\n        wb.styleData.numFmts.push(fmt);\r\n    }\r\n\r\n    return fmt;\r\n};\r\n\r\n\r\n/*\r\n    Style Opts\r\n    {\r\n        alignment: { // ยง18.8.1\r\n            horizontal: ['center', 'centerContinuous', 'distributed', 'fill', 'general', 'justify', 'left', 'right'],\r\n            indent: integer, // Number of spaces to indent = indent value * 3\r\n            justifyLastLine: boolean,\r\n            readingOrder: ['contextDependent', 'leftToRight', 'rightToLeft'], \r\n            relativeIndent: integer, // number of additional spaces to indent\r\n            shrinkToFit: boolean,\r\n            textRotation: integer, // number of degrees to rotate text counter-clockwise\r\n            vertical: ['bottom', 'center', 'distributed', 'justify', 'top'],\r\n            wrapText: boolean\r\n        },\r\n        font: { // ยง18.8.22\r\n            bold: boolean,\r\n            charset: integer,\r\n            color: string,\r\n            condense: boolean,\r\n            extend: boolean,\r\n            family: string,\r\n            italics: boolean,\r\n            name: string,\r\n            outline: boolean,\r\n            scheme: string, // ยง18.18.33 ST_FontScheme (Font scheme Styles)\r\n            shadow: boolean,\r\n            strike: boolean,\r\n            size: integer,\r\n            underline: boolean,\r\n            vertAlign: string // ยง22.9.2.17 ST_VerticalAlignRun (Vertical Positioning Location)\r\n        },\r\n        border: { // ยง18.8.4 border (Border)\r\n            left: {\r\n                style: string,\r\n                color: string\r\n            },\r\n            right: {\r\n                style: string,\r\n                color: string\r\n            },\r\n            top: {\r\n                style: string,\r\n                color: string\r\n            },\r\n            bottom: {\r\n                style: string,\r\n                color: string\r\n            },\r\n            diagonal: {\r\n                style: string,\r\n                color: string\r\n            },\r\n            diagonalDown: boolean,\r\n            diagonalUp: boolean,\r\n            outline: boolean\r\n        },\r\n        fill: { // ยง18.8.20 fill (Fill)\r\n            type: 'pattern',\r\n            patternType: 'solid',\r\n            color: 'Yellow'\r\n        },\r\n        numberFormat: integer or string // ยง18.8.30 numFmt (Number Format)\r\n    }\r\n*/\r\nclass Style {\r\n    constructor(wb, opts) {\r\n        /**\r\n         * Excel Style object\r\n         * @class Style\r\n         * @desc Style object for formatting Excel Cells\r\n         * @param {Workbook} wb Excel Workbook object\r\n         * @param {Object} opts Options for style\r\n         * @param {Object} opts.alignment Options for creating an Alignment instance\r\n         * @param {Object} opts.font Options for creating a Font instance\r\n         * @param {Object} opts.border Options for creating a Border instance\r\n         * @param {Object} opts.fill Options for creating a Fill instance\r\n         * @param {String} opts.numberFormat\r\n         * @property {Alignment} alignment Alignment instance associated with Style\r\n         * @property {Border} border Border instance associated with Style\r\n         * @property {Number} borderId ID of Border instance in the Workbook\r\n         * @property {Fill} fill Fill instance associated with Style\r\n         * @property {Number} fillId ID of Fill instance in the Workbook\r\n         * @property {Font} font Font instance associated with Style\r\n         * @property {Number} fontId ID of Font instance in the Workbook\r\n         * @property {String} numberFormat String represenation of the way a number should be formatted\r\n         * @property {Number} xf XF id of the Style in the Workbook\r\n         * @returns {Style} \r\n         */\r\n        opts = opts ? opts : {};\r\n        opts = deepmerge(wb.styles[0] ? wb.styles[0] : {}, opts);\r\n\r\n        if (opts.alignment !== undefined) {\r\n            this.alignment = new Alignment(opts.alignment);\r\n        }\r\n\r\n        if (opts.border !== undefined) {\r\n            this.borderId = _getBorderId(wb, opts.border); // attribute 0 based index\r\n            this.border = wb.styleData.borders[this.borderId];\r\n        }\r\n        if (opts.fill !== undefined) {\r\n            this.fillId = _getFillId(wb, opts.fill); // attribute 0 based index\r\n            this.fill = wb.styleData.fills[this.fillId];\r\n        }\r\n\r\n        if (opts.font !== undefined) {\r\n            this.fontId = _getFontId(wb, opts.font); // attribute 0 based index\r\n            this.font = wb.styleData.fonts[this.fontId];\r\n        }\r\n\r\n        if (opts.numberFormat !== undefined) {\r\n            if (typeof opts.numberFormat === 'number' && opts.numberFormat <= 164) {\r\n                this.numFmtId = opts.numberFormat;\r\n            } else if (typeof opts.numberFormat === 'string') {\r\n                this.numFmt = _getNumFmt(wb, opts.numberFormat);\r\n            }\r\n        }\r\n\r\n        if (opts.pivotButton !== undefined) {\r\n            this.pivotButton = null; // attribute boolean\r\n        }\r\n\r\n        if (opts.quotePrefix !== undefined) {\r\n            this.quotePrefix = null; // attribute boolean\r\n        }\r\n\r\n        this.ids = {};\r\n    }\r\n\r\n    get xf() {\r\n        let thisXF = {};\r\n\r\n        if (typeof this.fontId === 'number') {\r\n            thisXF.applyFont = 1;\r\n            thisXF.fontId = this.fontId;\r\n        }\r\n\r\n        if (typeof this.fillId === 'number') {\r\n            thisXF.applyFill = 1;\r\n            thisXF.fillId = this.fillId;\r\n        }\r\n\r\n        if (typeof this.borderId === 'number') {\r\n            thisXF.applyBorder = 1;\r\n            thisXF.borderId = this.borderId;\r\n        }\r\n\r\n        if (typeof this.numFmtId === 'number') {\r\n            thisXF.applyNumberFormat = 1;\r\n            thisXF.numFmtId = this.numFmtId;\r\n        } else if (this.numFmt !== undefined && this.numFmt !== null) {\r\n            thisXF.applyNumberFormat = 1;\r\n            thisXF.numFmtId = this.numFmt.numFmtId;\r\n        }\r\n\r\n        if (this.alignment instanceof Alignment) {\r\n            thisXF.applyAlignment = 1;\r\n            thisXF.alignment = this.alignment;\r\n        }\r\n\r\n        return thisXF;\r\n    }\r\n\r\n\r\n    /** \r\n     * @func Style.toObject\r\n     * @desc Converts the Style instance to a javascript object\r\n     * @returns {Object}\r\n     */\r\n    toObject() {\r\n        let obj = {};\r\n\r\n        if (typeof this.fontId === 'number') {\r\n            obj.font = this.font.toObject();\r\n        }\r\n\r\n        if (typeof this.fillId === 'number') {\r\n            obj.fill = this.fill.toObject();\r\n        }\r\n\r\n        if (typeof this.borderId === 'number') {\r\n            obj.border = this.border.toObject();\r\n        }\r\n\r\n        if (typeof this.numFmtId === 'number' && this.numFmtId < 164) {\r\n            obj.numberFormat = this.numFmtId;\r\n        } else if (this.numFmt !== undefined && this.numFmt !== null) {\r\n            obj.numberFormat = this.numFmt.formatCode;\r\n        }\r\n\r\n        if (this.alignment instanceof Alignment) {\r\n            obj.alignment = this.alignment.toObject();\r\n        }\r\n\r\n        if (this.pivotButton !== undefined) {\r\n            obj.pivotButton = this.pivotButton;\r\n        }\r\n\r\n        if (this.quotePrefix !== undefined) {\r\n            obj.quotePrefix = this.quotePrefix;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * @alias Style.addToXMLele\r\n     * @desc When generating Workbook output, attaches style to the styles xml file\r\n     * @func Style.addToXMLele\r\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\r\n     */\r\n    addXFtoXMLele(ele) {\r\n        let thisEle = ele.ele('xf');\r\n        let thisXF = this.xf;\r\n        Object.keys(thisXF).forEach((a) => {\r\n            if (a === 'alignment') {\r\n                thisXF[a].addToXMLele(thisEle);\r\n            } else {\r\n                thisEle.att(a, thisXF[a]);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @alias Style.addDXFtoXMLele\r\n     * @desc When generating Workbook output, attaches style to the styles xml file as a dxf for use with conditional formatting rules\r\n     * @func Style.addDXFtoXMLele\r\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\r\n     */\r\n    addDXFtoXMLele(ele) {\r\n        let thisEle = ele.ele('dxf');\r\n\r\n        if (this.font instanceof Font) {\r\n            this.font.addToXMLele(thisEle);\r\n        }\r\n\r\n        if (this.numFmt instanceof NumberFormat) {\r\n            this.numFmt.addToXMLele(thisEle);\r\n        }\r\n\r\n        if (this.fill instanceof Fill) {\r\n            this.fill.addToXMLele(thisEle.ele('fill'));\r\n        }\r\n\r\n        if (this.alignment instanceof Alignment) {\r\n            this.alignment.addToXMLele(thisEle);\r\n        }\r\n\r\n        if (this.border instanceof Border) {\r\n            this.border.addToXMLele(thisEle);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Style;"]}