{"version":3,"sources":["../../../source/lib/classes/ctMarker.js"],"names":["EMU","require","CTMarker","colId","colOffset","rowId","rowOffset","_col","_colOff","_row","_rowOff","val","parseInt","TypeError","value","module","exports"],"mappings":";;;;;;AAAA,IAAIA,MAAMC,QAAQ,UAAR,CAAV;;IAEMC,Q;AACF;;;;;;;;;;;;AAYA,sBAAYC,KAAZ,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,SAArC,EAAgD;AAAA;;AAC5C,aAAKC,IAAL,GAAYJ,KAAZ;AACA,aAAKK,OAAL,GAAe,IAAIR,GAAJ,CAAQI,SAAR,CAAf;AACA,aAAKK,IAAL,GAAYJ,KAAZ;AACA,aAAKK,OAAL,GAAe,IAAIV,GAAJ,CAAQM,SAAR,CAAf;AACH;;;;4BAES;AACN,mBAAO,KAAKC,IAAZ;AACH,S;0BACOI,G,EAAK;AACT,gBAAIC,SAASD,GAAT,EAAc,EAAd,MAAsBA,GAAtB,IAA6BA,MAAM,CAAvC,EAA0C;AACtC,sBAAM,IAAIE,SAAJ,CAAc,4CAAd,CAAN;AACH;AACD,iBAAKN,IAAL,GAAYI,GAAZ;AACH;;;4BAES;AACN,mBAAO,KAAKF,IAAZ;AACH,S;0BACOE,G,EAAK;AACT,gBAAIC,SAASD,GAAT,EAAc,EAAd,MAAsBA,GAAtB,IAA6BA,MAAM,CAAvC,EAA0C;AACtC,sBAAM,IAAIE,SAAJ,CAAc,yCAAd,CAAN;AACH;AACD,iBAAKJ,IAAL,GAAYE,GAAZ;AACH;;;4BAEY;AACT,mBAAO,KAAKH,OAAL,CAAaM,KAApB;AACH,S;0BACUH,G,EAAK;AACZ,iBAAKH,OAAL,GAAe,IAAIR,GAAJ,CAAQW,GAAR,CAAf;AACH;;;4BAEY;AACT,mBAAO,KAAKD,OAAL,CAAaI,KAApB;AACH,S;0BACUH,G,EAAK;AACZ,iBAAKD,OAAL,GAAe,IAAIV,GAAJ,CAAQW,GAAR,CAAf;AACH;;;;;;AAGLI,OAAOC,OAAP,GAAiBd,QAAjB","file":"ctMarker.js","sourcesContent":["let EMU = require('./emu.js');\r\n\r\nclass CTMarker {\r\n    /**\r\n     * Element representing an Excel position marker\r\n     * @param {Number} colId Column Number\r\n     * @param {String} colOffset Offset stating how far right to shift the start edge\r\n     * @param {Number} rowId Row Number\r\n     * @param {String} rowOffset Offset stating how far down to shift the start edge\r\n     * @property {Number} col Column number\r\n     * @property {EMU} colOff EMUs of right shift\r\n     * @property {Number} row Row number\r\n     * @property {EMU} rowOff EMUs of top shift\r\n     * @returns {CTMarker} Excel CTMarker \r\n     */\r\n    constructor(colId, colOffset, rowId, rowOffset) {\r\n        this._col = colId;\r\n        this._colOff = new EMU(colOffset);\r\n        this._row = rowId;\r\n        this._rowOff = new EMU(rowOffset);\r\n    }\r\n\r\n    get col() {\r\n        return this._col;\r\n    }\r\n    set col(val) {\r\n        if (parseInt(val, 10) !== val || val < 0) {\r\n            throw new TypeError('CTMarker column must be a positive integer');\r\n        }\r\n        this._col = val;\r\n    }\r\n\r\n    get row() {\r\n        return this._row;\r\n    }\r\n    set row(val) {\r\n        if (parseInt(val, 10) !== val || val < 0) {\r\n            throw new TypeError('CTMarker row must be a positive integer');\r\n        }\r\n        this._row = val;\r\n    }\r\n\r\n    get colOff() {\r\n        return this._colOff.value;\r\n    }\r\n    set colOff(val) {\r\n        this._colOff = new EMU(val);\r\n    }\r\n\r\n    get rowOff() {\r\n        return this._rowOff.value;\r\n    }\r\n    set rowOff(val) {\r\n        this._rowOff = new EMU(val);\r\n    }\r\n}\r\n\r\nmodule.exports = CTMarker;"]}